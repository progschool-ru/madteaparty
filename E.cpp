/*

Этап 1.
Выполнил участник E.

- Показывает пользователю сколько осталось
- Запрашивает число
- Уменьшает сколько осталось и так далее
- Выходит, когда ничего не останется
- Нельзя ходить меньше чем 2 и больше чем 4


Этап 2.
Выполнил участник С.

Останавливаем игру, когда осталось неотрицательное число, но взять ничего нельзя.
Показываем, кто ходит: первый или второй.
Финальное поздравление, где написано кто выиграл: первый или второй. Выигрывает тот, кто последним ходил.


Этап 3.
Выполнил участник N.

- Игрок не может взять больше, чем лежит в куче.
- В конфигурационном файле conf.txt задано сколько лежит в куче, min и max.
- Программа читает эту конфигурацию перед запуском и играет.
- Если конфигурация противоречива,
    выводим на экран информацию о том, что не понравилось,
    сразу после этого выходим


Этап 4.
Выполнил участник C.

- Если обнаружили, что файла нет, то создаём example файл с какой-то конфигурацией
- Второй игрок - комп. Ходит как-то: всегда какое-то допустимое число.


Этап 5.
Выполнил участник M.

- Комп старается выиграть:
    если может, ходит правильно,
    если не может, ходит как-то: какое-то допустимое число.
- В конфиге можно задать, кто первый, кто второй:
    комп, чел, два компа, два чела.
- Пусть создаётся не test.txt, а сразу conf.txt


Этап 6.
Прислать до 22:00 субботы 7 января

- Тестируем, исправляем ошибки.
- Смотрим код, выискиваем потенциальные ошибки, тестируем, исправляем.
- Улучшаем пользовательский интерфейс на своё усмотрение, но оставляя его текстовым.


Известные проблемы:

- Обнаружил участник M:
    Не сделан выбор, кто компьютер, а кто человек.
 
Добавляйте сюда проблемы о которых вы знаете, но не смогли или не успели решить.




*/

#include<stdio.h>
#include<io.h>
#include <fstream>
#include <iostream>
#include <stdlib.h>
#include <time.h>

using namespace std;

int main()
{
	int i=30,a,min,max;
	FILE *f=fopen("conf.txt","rt"); fscanf(f,"%d%d%d",&i,&min,&max);
	if(f == NULL){
		ofstream fout;
		fout.open("conf.txt");
		mingen:
        srand(time(NULL));
		min=rand()%8+1;
		max=rand()%10+1;//max
		if(min>max) goto mingen;
		colgen:
		i=rand()%50+1;//col
		if(i<=max) goto colgen;
		fout<<i;
		fout<<" ";
		fout<<min;
		fout<<" ";
		fout<<max;
		fout.close();
	} //coздать и заполнить

	else{FILE *f=fopen("conf.txt","rt"); fscanf(f,"%d%d%d",&i,&min,&max);}

	if(i<0)
	{
	printf("Error");
	return 1;
	}
	printf("Avalable %d\n",i);
	int curturn=1;
	while (i>=min)
	{
		printf("%d", curturn);
		printf (" turn\n");

		if(curturn==2){
		    if(i%(min+max)>min)
		    {
		        a=i%(min+max);
		        printf("%d\n", a);
		    }
		    else{
            srand(time(NULL));
            a=rand()%(max-min)+min;
            printf("%d\n", a);
		    }
		    
		} 
		else{
		  scanf ("%d",&a);  
		} 

		int l=0,m=0;
		while(m<=max&&m<=i)
		{
		if(m<min){}
		else if(a==m)l=1;
	    {
        m=m+1;
	    }
		}
		if(l==1)
		{
	    	i=i-a;
		    printf ("Avalable %d\n",i);
		    if(curturn==1) curturn=2;
		    else curturn=1;
	    }
	    else
		printf ("invalid input\n");
	}
	printf("The end ");
	printf("%d", 3-curturn);
	printf(" wins");
}
