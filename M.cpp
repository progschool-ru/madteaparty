/*

Этап 1.
Выполнил участник M.

- Показывает пользователю сколько осталось
- Запрашивает число
- Уменьшает сколько осталось и так далее
- Выходит, когда ничего не останется
- Нельзя ходить меньше чем 2 и больше чем 4


Этап 2.
Выполнил участник K.

- Останавливаем игру, когда осталось неотрицательное число, но взять ничего нельзя.
- Показываем, кто ходит: первый или второй.
- Финальное поздравление, где написано кто выиграл: первый или второй. Выигрывает тот, кто последним ходил.


Этап 3.
Прислать до субботы 31 декабря 23:59

- Игрок не может взять больше, чем лежит в куче.
- В конфигурационном файле conf.txt задано сколько лежит в куче, min и max.
- Программа читает эту конфигурацию перед запуском и играет.
- Если конфигурация противоречива,
    выводим на экран информацию о том, что не понравилось,
    сразу после этого выходим


Известные проблемы:
На данный момент известных проблем нет.
Добавляйте сюда проблемы о которых вы знаете, но не смогли или не успели решить.





*/

#include<stdio.h>
int main()
{
    int b=30, min = 2, max = 4;
    int player = 1;
    printf("Left 30. Player 1\n");
    while(b>=min)
    {
        int c;
        scanf("%i",&c);
        if (c < min || c > max)
        {
            printf("wrong");
            printf("\n");
        }
        else 
        {
            b=b-c;
            player = (1 == player) ? 2 : 1;
            printf("Left %d. Player %d\n", b, player);
        }
       
    }
    player = (1 == player) ? 2 : 1;
    printf("The end. The winner is player #%d!\n", player);
}
