/*

Этап 1.
Выполнил участник E.

- Показывает пользователю сколько осталось
- Запрашивает число
- Уменьшает сколько осталось и так далее
- Выходит, когда ничего не останется
- Нельзя ходить меньше чем 2 и больше чем 4


Этап 2.
Выполнил участник С.

Останавливаем игру, когда осталось неотрицательное число, но взять ничего нельзя.
Показываем, кто ходит: первый или второй.
Финальное поздравление, где написано кто выиграл: первый или второй. Выигрывает тот, кто последним ходил.


Этап 3.
Выполнил участник N.

- Игрок не может взять больше, чем лежит в куче.
- В конфигурационном файле conf.txt задано сколько лежит в куче, min и max.
- Программа читает эту конфигурацию перед запуском и играет.
- Если конфигурация противоречива,
    выводим на экран информацию о том, что не понравилось,
    сразу после этого выходим


Этап 4.
Прислать до 22:00 вторника 3 января

- Если обнаружили, что файла нет, то создаём example файл с какой-то конфигурацией
- Второй игрок - комп. Ходит как-то: всегда какое-то допустимое число.


Известные проблемы:
На данный момент известных проблем нет.
Добавляйте сюда проблемы о которых вы знаете, но не смогли или не успели решить.




*/

#include<stdio.h>
int main()
{
	int i=30,a,j,k;
	FILE *f=fopen("conf.txt","rt");
	fscanf(f,"%d%d%d",&i,&j,&k);
	if(i<0)
	{
	printf("Error");
	return 1;
	}
	printf("Avalable %d\n",i);
	int curturn=1;
	while (i>=j)
	{
		printf("%d", curturn);
		printf (" turn\n");

		scanf ("%d",&a);
		int l=0,m=0;
		while(m<=k&&m<=i)
		{
		if(m<j){}
		else if(a==m)l=1;
	    m=m+1;
		}
		if(l==1)
		{
	    	i=i-a;
		    printf ("Avalable %d\n",i);
		    if(curturn==1) curturn=2;
		    else curturn=1;
	    }
	    else
		printf ("invalid input\n");
	}
	printf("The end ");
	printf("%d", 3-curturn);
	printf(" wins");
}
