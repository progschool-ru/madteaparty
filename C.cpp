/*

Этап 1.
Выполнил участник С.

- Показывает пользователю сколько осталось
- Запрашивает число
- Уменьшает сколько осталось и так далее
- Выходит, когда ничего не останется
- Нельзя ходить меньше чем 2 и больше чем 4


Этап 2.
Выполнил участник N.

Останавливаем игру, когда осталось неотрицательное число, но взять ничего нельзя.
Показываем, кто ходит: первый или второй.
Финальное поздравление, где написано кто выиграл: первый или второй. Выигрывает тот, кто последним ходил.


Этап 3.
Прислать до субботы 31 декабря 23:59

- Игрок не может взять больше, чем лежит в куче.
- В конфигурационном файле conf.txt задано сколько лежит в куче, min и max.
- Программа читает эту конфигурацию перед запуском и играет.
- Если конфигурация противоречива,
    выводим на экран информацию о том, что не понравилось,
    сразу после этого выходим


Известные проблемы:
На данный момент известных проблем нет.
Добавляйте сюда проблемы о которых вы знаете, но не смогли или не успели решить.




*/



#include<stdio.h>
using namespace std;
int main(){
int n=30;
printf("Left 30. Player 1");
printf("\n");
int a=1;
while(n>1){
	int cur;
	scanf("%i",&cur);
	if(cur!=2 && cur!=3 && cur!=4) {printf("wrong"); printf("\n");}
	else n=n-cur,a=3-a;
	printf("Left ");
	printf("%i",n);
    printf(". Player");
    printf(" %i", a);
	printf("\n");
}
a=3-a;
printf("The end");
printf(". The winner is player #%i", a);
}
